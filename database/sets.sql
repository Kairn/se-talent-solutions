CREATE TABLE EMPLOYEE (
	EMPLOYEE_ID INT PRIMARY KEY,
	FIRSTNAME VARCHAR2(30) NOT NULL,
	LASTNAME VARCHAR2(30) NOT NULL,
	EMAIL VARCHAR2(100) NOT NULL,
	UP_GROUP INT,
	DOWN_GROUP INT,
	ACCESS_LEVEL INT NOT NULL
);

CREATE SEQUENCE SEQ_EMPLOYEE
START WITH 1001
INCREMENT BY 1;

CREATE TRIGGER TR_EMPLOYEE
BEFORE INSERT ON EMPLOYEE
FOR EACH ROW
BEGIN
	SELECT SEQ_EMPLOYEE.NEXTVAL INTO :NEW.EMPLOYEE_ID FROM DUAL;
END;

CREATE TABLE CREDENTIALS (
	CREDENTIALS_ID INT PRIMARY KEY,
	USERNAME VARCHAR2(30) NOT NULL UNIQUE,
	PASSWORD_HASH CHAR(64) NOT NULL,
	EMPLOYEE_ID INT
);

CREATE SEQUENCE SEQ_CREDENTIALS
START WITH 1
INCREMENT BY 1;

CREATE TRIGGER TR_CREDENTIALS
BEFORE INSERT ON CREDENTIALS
FOR EACH ROW
BEGIN
	SELECT SEQ_CREDENTIALS.NEXTVAL INTO :NEW.CREDENTIALS_ID FROM DUAL;
END;

CREATE TABLE REQUEST (
	REQUEST_ID INT PRIMARY KEY,
	EMPLOYEE_ID INT NOT NULL,
	REQUEST_DATE DATE NOT NULL,
	REASON VARCHAR2(20),
	MESSAGE VARCHAR2(4000),
	AMOUNT NUMBER NOT NULL
);

CREATE SEQUENCE SEQ_REQUEST
START WITH 1
INCREMENT BY 1;

CREATE TRIGGER TR_REQUEST
BEFORE INSERT ON REQUEST
FOR EACH ROW
BEGIN
	SELECT SEQ_REQUEST.NEXTVAL INTO :NEW.REQUEST_ID FROM DUAL;
END;

CREATE TABLE RESOLUTION (
	RESOLUTION_ID INT PRIMARY KEY,
	REQUEST_ID INT NOT NULL,
	STATUS INT NOT NULL,
	EMPLOYEE_ID INT NOT NULL,
	RESOLUTION_DATE DATE NOT NULL
);

CREATE SEQUENCE SEQ_RESOLUTION
START WITH 1
INCREMENT BY 1;

CREATE TRIGGER TR_RESOLUTION
BEFORE INSERT ON RESOLUTION
FOR EACH ROW
BEGIN
	SELECT SEQ_RESOLUTION.NEXTVAL INTO :NEW.RESOLUTION_ID FROM DUAL;
END;

CREATE TABLE IMAGEFILE (
	FILE_ID INT PRIMARY KEY,
	FILE_DATA BLOB,
	FILE_TYPE VARCHAR2(10),
	REQUEST_ID INT NOT NULL
);

CREATE SEQUENCE SEQ_IMAGEFILE
START WITH 1
INCREMENT BY 1;

CREATE TRIGGER TR_IMAGEFILE
BEFORE INSERT ON IMAGEFILE
FOR EACH ROW
BEGIN
	SELECT SEQ_IMAGEFILE.NEXTVAL INTO :NEW.FILE_ID FROM DUAL;
END;

ALTER TABLE IMAGEFILE
ADD CONSTRAINT FK_IMAGEFILE_REQUEST
FOREIGN KEY (REQUEST_ID) REFERENCES REQUEST(REQUEST_ID)
ON DELETE CASCADE;

ALTER TABLE RESOLUTION
ADD CONSTRAINT FK_RESOLUTION_REQUEST
FOREIGN KEY (REQUEST_ID) REFERENCES REQUEST(REQUEST_ID)
ON DELETE CASCADE;

ALTER TABLE REQUEST
ADD CONSTRAINT FK_REQUEST_EMPLOYEE
FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID)
ON DELETE CASCADE;

ALTER TABLE CREDENTIALS
ADD CONSTRAINT FK_CREDENTIALS_EMPLOYEE
FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID)
ON DELETE CASCADE;